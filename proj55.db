drop table camara cascade;
drop table video cascade;
drop table segmentoVideo cascade;
drop table local cascade;
drop table vigia cascade;
drop table eventoEmergencia cascade;
drop table processoSocorro cascade;
drop table entidadeMeio cascade;
drop table meio cascade;
drop table meioCombate cascade;
drop table meioApoio cascade;
drop table meioSocorro cascade;
drop table transporta cascade;
drop table alocado cascade;
drop table acciona cascade;
drop table coordenador cascade;
drop table audita cascade;
drop table solicita cascade;
----------------------------------------
-- Table Creation
----------------------------------------

-- Named constraints are global to the database.
-- Therefore the following use the following naming rules:
--   1. pk_table for names of primary key constraints
--   2. fk_table_another for names of foreign key constraints

create table camara
   (numCamara 	integer	not null unique,
   constraint pk_camara_num_camara primary key(numCamara));

create table video
    (dataHoraInicio 	date	not null unique,
    dataHoraFim   date  not null,
    numCamara   integer not null unique,
    constraint pk_video_data_hora_inicio primary key(dataHoraInicio),
    constraint fk_video_num_camara foreign key(numCamara) references camara(numCamara));

create table segmentoVideo
     (numSegmento 	integer	not null unique,
     duracao   interval  not null,
     dataHoraInicio   date  not null unique,
     numCamara   integer not null unique,
     constraint pk_segmento_video_numSegmento primary key(numSegmento),
     constraint fk_segmento_video_data_hora_inicio foreign key(video) references video(dataHoraInicio),
     constraint fk_segmento_video_num_camara foreign key(video) references video(numCamara));

create table local
    (moradaLocal 	varchar(255)	not null unique,
    constraint pk_local_morada_local primary key(moradaLocal));

create table vigia
     (moradaLocal 	varchar(255)	not null unique,
     numCamara   integer not null unique,
     constraint fk_vigia_morada_local foreign key(local) references local(moradaLocal),
     constraint fk_vigia_num_camara foreign key(camara) references camara(numCamara));

create table eventoEmergencia
      (numTelefone 	varchar(15)	not null unique,
      instanteChamada  datetime not null,
      nomePessoa  varchar(80) not null unique,
      moradaLocal  varchar(255) not null,
      numProcessoSocorro  integer, /*RI: pode ser null*/
      constraint pk_evento_emergencia_num_telefone primary key(numTelefone),
      constraint pk_evento_emergencia_instante_chamada primary key(instanteChamada),
      constraint fk_evento_emergencia_morada_local foreign key(local) references local(moradaLocal),
      constraint fk_evento_emergencia_num_processo_socorro foreign key(processoSocorro) references processoSocorro(numProcessoSocorro));

create table processoSocorro
      /*RI: todo o processo de socorro esta associado a um ou mais eventoEmergencia*/
     (numProcessoSocorro	integer	unique,
      constraint pk_processo_socorro_num primary key(numProcessoSocorro));

create table entidadeMeio
     (nomeEntidade	varchar(200)	not null unique,
      constraint pk_entidade_meio_nome_entidade primary key(nomeEntidade));

create table meio
     (numMeio	  integer	not null unique,
      nomeMeio	varchar(80)	not null,  /*VER SE E 80 OU 200*/
      nomeEntidade  varchar(200)	not null unique,
      constraint pk_meio_num primary key(numMeio),
      constraint fk_meio_nome_entidade foreign key(entidadeMeio) references entidadeMeio(nomeEntidade));

create table meioCombate
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      constraint fk_meio_combate_num_meio foreign key(meio) references meio(numMeio),
      constraint fk_meio_combate_nome_entidade foreign key(meio) references meio(nomeEntidade));

create table meioApoio
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      constraint fk_meio_apoio_num_meio foreign key(meio) references meio(numMeio),
      constraint fk_meio_apoio_nome_entidade foreign key(meio) references meio(nomeEntidade));

create table meioSocorro
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      constraint fk_meio_socorro_num_meio foreign key(meio) references meio(numMeio),
      constraint fk_meio_socorro_nome_entidade foreign key(meio) references meio(nomeEntidade));

create table transporta
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      numVitimas  integer not null,
      numProcessoSocorro integer unique,
      constraint fk_tranporta_num_meio foreign key(meioSocorro) references meioSocorro(numMeio),
      constraint fk_tranporta_nome_entidade foreign key(meioSocorro) references meioSocorro(nomeEntidade),
      constraint fk_tranporta_num_processo_socorro foreign key(processoSocorro) references processoSocorro(numProcessoSocorro));

create table alocado
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      numHoras  integer not null,
      numProcessoSocorro integer unique,
      constraint fk_alocado_num_meio foreign key(meioApoio) references meioApoio(numMeio),
      constraint fk_alocado_nome_entidade foreign key(meioApoio) references meioApoio(nomeEntidade),
      constraint fk_alocado_num_processo_socorro foreign key(processoSocorro) references processoSocorro(numProcessoSocorro));

create table acciona
     (numMeio	  integer	not null unique,
      nomeEntidade	varchar(200)	not null unique,
      numProcessoSocorro  integer unique,
      constraint fk_alocado_num_meio foreign key(meio) references meio(numMeio),
      constraint fk_alocado_nome_entidade foreign key(meio) references meio(nomeEntidade),
      constraint fk_alocado_num_processo_socorro foreign key(processoSocorro) references processoSocorro(numProcessoSocorro));

create table coordenador
     (idCoordenador	  int	not null unique,
      constraint pk_coordenador_id primary key(idCoordenador));

create table audita
     (idCoordenador	  integer	not null unique,
      numMeio	  integer	not null unique,
      nomeEntidade  varchar(200)	not null unique,
      numProcessoSocorro  integer unique,
      datahoraInicio    date	not null, /*RI: datahoraInicio < datahoraFim*/
      datahoraFim   date	not null,
      dataAuditoria   date	not null, /*RI: dataAuditoria >= dataAtual*/
      texto,
      constraint fk_audita_id_coordenador foreign key(coordenador) references coordenador(idCoordenador),
      constraint fk_audita_num_meio foreign key(acciona) references acciona(numMeio),
      constraint fk_audita_nome_entidade foreign key(acciona) references acciona(nomeEntidade),
      constraint fk_audita_num_processo_socorro foreign key(acciona) references acciona(numProcessoSocorro));

create table solicita
     (idCoordenador	  integer	not null unique,
      dataHoraInicioVideo    date	not null unique,
      numCamara   integer not null unique,
      dataHoraInicio   date	not null,
      dataHoraFim   date	not null,
      constraint fk_solicita_id_coordenador foreign key(coordenador) references coordenador(idCoordenador),
      constraint fk_solicita_data_hora_inicio foreign key(video) references video(dataHoraInicioVideo),
      constraint fk_solicita_num_camara foreign key(video) references video(numCamara));

----------------------------------------
-- Populate Relations
----------------------------------------

insert into customer values ('Adams',	'Main Street',	'Lisbon');
insert into customer values ('Brown',	'Main Street',	'Oporto');
insert into customer values ('Cook',	'Main Street',	'Lisbon');
insert into customer values ('Davis',	'Church Street','Oporto');
insert into customer values ('Evans',	'Forest Street','Coimbra');
insert into customer values ('Flores',	'Station Street','Braga');
insert into customer values ('Gonzalez','Sunny Street', 'Faro');
insert into customer values ('Iacocca',	'Spring Steet',	'Coimbra');
insert into customer values ('Johnson',	'New Street',	'Cascais');
insert into customer values ('King',	'Garden Street','Aveiro');
insert into customer values ('Lopez',	'Grand Street',	'Vila Real');
insert into customer values ('Martin',	'Royal Street',	'Braga');
insert into customer values ('Nguyen',	'School Street','Castelo Branco');
insert into customer values ('Oliver',	'First Stret',	'Oporto');
insert into customer values ('Parker',	'Hope Street',  'Oporto');

insert into branch values ('Downtown',	'Lisbon',		1900000);
insert into branch values ('Central',	'Cascais',		2100000);
insert into branch values ('Uptown',	'Amadora',		1700000);
insert into branch values ('Metro',	'Amadora',	 	400200);
insert into branch values ('Round Hill','Amadora',		8000000);
insert into branch values ('Ship Terminal', 'Sintra',	 	0400000);
insert into branch values ('Bolsa',  'Oporto',		3900000);
insert into branch values ('University',	'Vila Real',	7200000);
insert into branch values ('Wine Celar', 'Oporto',		4002800);

insert into account values ('A-101',	'Downtown',	500);
insert into account values ('A-215',	'Metro',	600);
insert into account values ('A-102',	'Uptown',	700);
insert into account values ('A-305',	'Round Hill',	800);
insert into account values ('A-201',	'Uptown',	900);
insert into account values ('A-222',	'Central',	550);
insert into account values ('A-217',	'University',	650);
insert into account values ('A-333',	'Central',	750);
insert into account values ('A-444',	'Downtown',	850);

insert into depositor values ('Johnson', 'A-101');
insert into depositor values ('Brown',	 'A-215');
insert into depositor values ('Cook',	 'A-102');
insert into depositor values ('Cook',	 'A-101');
insert into depositor values ('Flores',	 'A-305');
insert into depositor values ('Johnson', 'A-201');
insert into depositor values ('Iacocca', 'A-217');
insert into depositor values ('Evans',   'A-222');
insert into depositor values ('Oliver',  'A-333');
insert into depositor values ('Brown',	 'A-444');

insert into loan values ('L-17', 'Downtown',	1000);
insert into loan values ('L-23', 'Central',	2000);
insert into loan values ('L-15', 'Uptown',	3000);
insert into loan values ('L-14', 'Downtown',	4000);
insert into loan values ('L-93', 'Metro',	5000);
insert into loan values ('L-11', 'Round Hill',	6000);
insert into loan values ('L-16', 'Uptown',	7000);
insert into loan values ('L-20', 'Downtown',	8000);
insert into loan values ('L-21', 'Central',	9000);

insert into borrower values ('Iacocca',	'L-17');
insert into borrower values ('Brown',	'L-23');
insert into borrower values ('Cook',	'L-15');
insert into borrower values ('Nguyen',	'L-14');
insert into borrower values ('Davis',	'L-93');
insert into borrower values ('Brown',	'L-11');
insert into borrower values ('Gonzalez','L-17');
insert into borrower values ('Iacocca',	'L-16');
insert into borrower values ('Parker',	'L-20');
insert into borrower values ('Brown',	'L-21');
